name: Publish on Release

on:
  release:
    types: [released]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.check.outputs.version }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Setup Build
        uses: ./.github/actions/build_setup
      - name: Check Tag with Version
        id: check
        run: |
          VER=$(./gradlew -q printVersion)
          echo "version=$VER" >> $GITHUB_OUTPUT
          TAG=$(echo $VER | awk -F- '{print "v"$2}')
          if [[ "$TAG" = ${{ github.event.release.tag_name }} ]]; then exit 0; else exit 1; fi
      - name: Build
        run: ./gradlew assemble --build-cache
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: build/libs/*
          if-no-files-found: error
          retention-days: 3

  upload-release-artifacts:
    name: Upload Release Artifacts
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
      - name: show dir
        if: github.event.release.name == 'simulate'
        run: ls -R
      - name: Upload artifacts to release
        uses: softprops/action-gh-release@v2
        with:
          files: ./!(*-@(dev|dev-all|dev-slim|javadoc)).jar
          fail_on_unmatched_files: true

  publish-maven:
    name: Publish to GTCEU Maven
    needs: build
    if: github.event.release.name != 'simulate'
    runs-on: ubuntu-latest
    env:
      MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
      MAVEN_USER: ${{ secrets.MAVEN_USER }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Setup Build
        uses: ./.github/actions/build_setup
      - name: Publish
        run: ./gradlew publish --build-cache

  publish-cf-modrinth:
    name: Publish to CF and Modrinth
    needs: build
    if: github.event.release.name != 'simulate'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
      - name: Publish Mod
        uses: Kir-Antipov/mc-publish@v3.3.0
        with:
          modrinth-id: 7tG215v7
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          curseforge-id: 890405
          curseforge-token: ${{ secrets.CURSEFORGE_TOKEN }}

          files: |
            ./!(*-@(dev|dev-all|dev-slim|sources|javadoc|dev-shadow|slim)).jar
            ./*-@(dev|sources|javadoc|dev-shadow|slim).jar

          name: GregTechCEu ${{ needs.build.outputs.VERSION }}
          version: mc${{ needs.build.outputs.VERSION }}
          version-type: beta
          loaders: forge
          java: 17
          fail-mode: fail

  # After successful release, PR ver bump to gradle.properties
  bump-version:
    name: Bump Version
    needs: [ build, upload-release-artifacts, publish-maven, publish-cf-modrinth ]
    if: ${{ always() && !failure() && !cancelled() }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v4
      - name: Bump Version
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git switch -C gh/ver-bump
          VER=$(awk '$1 == "mod_version" {print $3}' gradle.properties)
          MC_VER=$(echo ${{ needs.build.outputs.VERSION }} | awk -F- '{print $1}')
          BUMPED=$(echo $VER | awk -F. '/[0-9]+\./{$NF++;print}' OFS=.)
          sed -i "s/= ${VER}/= ${BUMPED}/" gradle.properties
          git commit -am "Bump version"
          git push --force --set-upstream origin gh/ver-bump
          gh pr create -B $MC_VER -H gh/ver-bump --title "Bump version to $BUMPED" --body "Created by GH Workflow"

  # Change release to draft if something failed above
  fail-release:
    name: Edit Failed Release
    needs: [ build, upload-release-artifacts, publish-maven, publish-cf-modrinth ]
    if: ${{ always() && (failure() || cancelled()) }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
        - run: gh release edit ${{ github.event.release.tag_name }} --draft=true
